// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xmlcall.proto

package com.luxoft.xmlcall.proto;

public final class XmlCall {
  private XmlCall() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(com.luxoft.xmlcall.proto.XmlCall.execType);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code xmlcall.ExecType}
   */
  public enum ExecType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>QUERY = 1;</code>
     */
    QUERY(1),
    /**
     * <code>INVOKE = 2;</code>
     */
    INVOKE(2),
    /**
     * <code>EVENT = 3;</code>
     */
    EVENT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>QUERY = 1;</code>
     */
    public static final int QUERY_VALUE = 1;
    /**
     * <code>INVOKE = 2;</code>
     */
    public static final int INVOKE_VALUE = 2;
    /**
     * <code>EVENT = 3;</code>
     */
    public static final int EVENT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ExecType valueOf(int value) {
      return forNumber(value);
    }

    public static ExecType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return QUERY;
        case 2: return INVOKE;
        case 3: return EVENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ExecType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ExecType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExecType>() {
            public ExecType findValueByNumber(int number) {
              return ExecType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.luxoft.xmlcall.proto.XmlCall.getDescriptor().getEnumTypes().get(0);
    }

    private static final ExecType[] VALUES = values();

    public static ExecType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ExecType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xmlcall.ExecType)
  }

  public static final int EXEC_TYPE_FIELD_NUMBER = 51234;
  /**
   * <code>extend .google.protobuf.MethodOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.MethodOptions,
      com.luxoft.xmlcall.proto.XmlCall.ExecType> execType = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        com.luxoft.xmlcall.proto.XmlCall.ExecType.class,
        null);

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rxmlcall.proto\022\007xmlcall\032 google/protobu" +
      "f/descriptor.proto\032\033google/protobuf/empt" +
      "y.proto*9\n\010ExecType\022\013\n\007UNKNOWN\020\000\022\t\n\005QUER" +
      "Y\020\001\022\n\n\006INVOKE\020\002\022\t\n\005EVENT\020\003:F\n\texec_type\022" +
      "\036.google.protobuf.MethodOptions\030\242\220\003 \001(\0162" +
      "\021.xmlcall.ExecTypeB#\n\030com.luxoft.xmlcall" +
      ".protoB\007XmlCallb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        }, assigner);
    execType.internalInit(descriptor.getExtensions().get(0));
    com.google.protobuf.DescriptorProtos.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
